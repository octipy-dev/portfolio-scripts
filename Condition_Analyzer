import polars as pl
import numpy as np
import matplotlib.pyplot as plt


# Define decay function
def decay_function(initial_value, decay_rate, time):
    return initial_value * np.exp(-decay_rate * time)


# Sample data for home exterior sections
data = {
    'section': ['Roof', 'Walls', 'Windows', 'Doors'],
    'initial_condition': [100, 100, 100, 100],  # Initial condition score
    'decay_rate': [0.05, 0.03, 0.04, 0.02],     # Decay rate per year
    'age': [10, 15, 8, 12]                      # Age in years
}

# Create a Polars DataFrame
df = pl.DataFrame(data)

# Calculate current condition
df = df.with_columns(
    (pl.col('initial_condition') * np.exp(-pl.col('decay_rate') * pl.col('age'))).alias('current_condition')
)

# Identify sections needing repair (condition below a threshold)
repair_threshold = 50
df = df.with_columns(
    (pl.col('current_condition') < repair_threshold).alias('needs_repair')
)

# Convert to pandas for plotting
df_pandas = df.to_pandas()

# Plot the results
plt.figure(figsize=(10, 6))
plt.bar(df_pandas['section'], df_pandas['current_condition'], color=df_pandas['needs_repair'].map(
    {True: 'red', False: 'green'}))
plt.axhline(y=repair_threshold, color='blue', linestyle='--', label='Repair Threshold')
plt.xlabel('Home Exterior Section')
plt.ylabel('Current Condition')
plt.title('Home Exterior Condition and Repair Needs')
plt.legend()
plt.show()

print(df)
